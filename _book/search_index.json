[["beta-diversity-comparison-at-elevation-chunk-level.html", "Chapter 9 Beta diversity comparison at elevation chunk level 9.1 Aisa 9.2 Aran 9.3 Sentein 9.4 Tourmalet", " Chapter 9 Beta diversity comparison at elevation chunk level Aisa_transect&lt;-sample_metadata %&gt;% filter(Transect==&quot;Aisa&quot;)%&gt;% column_to_rownames(&quot;EHI_number&quot;) Aran_transect&lt;-sample_metadata %&gt;% filter(Transect==&quot;Aran&quot;)%&gt;% column_to_rownames(&quot;EHI_number&quot;) sentein_transect&lt;-sample_metadata %&gt;% filter(Transect==&quot;Sentein&quot;)%&gt;% column_to_rownames(&quot;EHI_number&quot;) tourmalet_transect&lt;-sample_metadata %&gt;% filter(Transect==&quot;Tourmalet&quot;)%&gt;% column_to_rownames(&quot;EHI_number&quot;) 9.1 Aisa Aisa_transect_A&lt;-Aisa_transect %&gt;% filter(Elevation==&quot;1250&quot; | Elevation==&quot;1450&quot;) Aisa_counts_A &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(Aisa_transect_A))] identical(sort(colnames(Aisa_counts_A)), sort(as.character(rownames(Aisa_transect_A)))) Aisa_counts_func_A &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(Aisa_transect_A))] beta_div_richness_aisa_a&lt;-hillpair(data=Aisa_counts_A, q=0) beta_div_neutral_aisa_a&lt;-hillpair(data=Aisa_counts_A, q=1) beta_div_phylo_aisa_a&lt;-hillpair(data=Aisa_counts_A, q=1, tree=genome_tree) beta_div_func_aisa_a&lt;-hillpair(data=Aisa_counts_func_A, q=1, dist=dist) pairwise.adonis(beta_div_richness_aisa_a$S, Aisa_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_aisa_a$S, Aisa_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_aisa_a$S, Aisa_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_func_aisa_a$S, Aisa_transect_A$Elevation, perm = 999) Aisa_transect_B&lt;-Aisa_transect %&gt;% filter(Elevation==&quot;1450&quot; | Elevation==&quot;1650&quot;) Aisa_counts_B &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(Aisa_transect_B))] identical(sort(colnames(Aisa_counts_B)), sort(as.character(rownames(Aisa_transect_B)))) Aisa_counts_func_B &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(Aisa_transect_B))] beta_div_richness_aisa_b&lt;-hillpair(data=Aisa_counts_B, q=0) beta_div_neutral_aisa_b&lt;-hillpair(data=Aisa_counts_B, q=1) beta_div_phylo_aisa_b&lt;-hillpair(data=Aisa_counts_B, q=1, tree=genome_tree) beta_div_func_aisa_b&lt;-hillpair(data=Aisa_counts_func_B, q=1, dist=dist) pairwise.adonis(beta_div_richness_aisa_b$S, Aisa_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_aisa_b$S, Aisa_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_aisa_b$S, Aisa_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_func_aisa_b$S, Aisa_transect_B$Elevation, perm = 999) Aisa_transect_C&lt;-Aisa_transect %&gt;% filter(Elevation==&quot;1650&quot; | Elevation==&quot;1850&quot;) Aisa_counts_C &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(Aisa_transect_C))] identical(sort(colnames(Aisa_counts_C)), sort(as.character(rownames(Aisa_transect_C)))) Aisa_counts_func_C &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(Aisa_transect_C))] beta_div_richness_aisa_c&lt;-hillpair(data=Aisa_counts_C, q=0) beta_div_neutral_aisa_c&lt;-hillpair(data=Aisa_counts_C, q=1) beta_div_phylo_aisa_c&lt;-hillpair(data=Aisa_counts_C, q=1, tree=genome_tree) beta_div_func_aisa_c&lt;-hillpair(data=Aisa_counts_func_C, q=1, dist=dist) pairwise.adonis(beta_div_richness_aisa_c$S, Aisa_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_aisa_c$S, Aisa_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_aisa_c$S, Aisa_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_func_aisa_c$S, Aisa_transect_C$Elevation, perm = 999) 9.2 Aran Aran_transect_A&lt;-Aran_transect %&gt;% filter(Elevation==&quot;1000&quot; | Elevation==&quot;1080&quot;) Aran_counts_A &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(Aran_transect_A))] identical(sort(colnames(Aran_counts_A)), sort(as.character(rownames(Aran_transect_A)))) Aran_counts_func_A &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(Aran_transect_A))] beta_div_richness_aran_a&lt;-hillpair(data=Aran_counts_A, q=0) beta_div_neutral_aran_a&lt;-hillpair(data=Aran_counts_A, q=1) beta_div_phylo_aran_a&lt;-hillpair(data=Aran_counts_A, q=1, tree=genome_tree) beta_div_func_aran_a&lt;-hillpair(data=Aran_counts_func_A, q=1, dist=dist) pairwise.adonis(beta_div_richness_aran_a$S, Aran_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_aran_a$S, Aran_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_aran_a$S, Aran_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_func_aran_a$S, Aran_transect_A$Elevation, perm = 999) Aran_transect_B&lt;-Aran_transect %&gt;% filter(Elevation==&quot;1080&quot; | Elevation==&quot;1340&quot;) Aran_counts_B &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(Aran_transect_B))] identical(sort(colnames(Aran_counts_B)), sort(as.character(rownames(Aran_transect_B)))) Aran_counts_func_B &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(Aran_transect_B))] beta_div_richness_aran_b&lt;-hillpair(data=Aran_counts_B, q=0) beta_div_neutral_aran_b&lt;-hillpair(data=Aran_counts_B, q=1) beta_div_phylo_aran_b&lt;-hillpair(data=Aran_counts_B, q=1, tree=genome_tree) beta_div_func_aran_b&lt;-hillpair(data=Aran_counts_func_B, q=1, dist=dist) pairwise.adonis(beta_div_richness_aran_b$S, Aran_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_aran_b$S, Aran_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_aran_b$S, Aran_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_func_aran_b$S, Aran_transect_B$Elevation, perm = 999) Aran_transect_C&lt;-Aran_transect %&gt;% filter(Elevation==&quot;1340&quot; | Elevation==&quot;1500&quot;) Aran_counts_C &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(Aran_transect_C))] identical(sort(colnames(Aran_counts_C)), sort(as.character(rownames(Aran_transect_C)))) Aran_counts_func_C &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(Aran_transect_C))] beta_div_richness_aran_c&lt;-hillpair(data=Aran_counts_C, q=0) beta_div_neutral_aran_c&lt;-hillpair(data=Aran_counts_C, q=1) beta_div_phylo_aran_c&lt;-hillpair(data=Aran_counts_C, q=1, tree=genome_tree) beta_div_func_aran_c&lt;-hillpair(data=Aran_counts_func_C, q=1, dist=dist) pairwise.adonis(beta_div_richness_aran_c$S, Aran_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_aran_c$S, Aran_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_aran_c$S, Aran_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_func_aran_c$S, Aran_transect_C$Elevation, perm = 999) Aran_transect_D&lt;-Aran_transect %&gt;% filter(Elevation==&quot;1500&quot; | Elevation==&quot;1650&quot;) Aran_counts_D &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(Aran_transect_D))] identical(sort(colnames(Aran_counts_D)), sort(as.character(rownames(Aran_transect_D)))) Aran_counts_func_D &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(Aran_transect_D))] beta_div_richness_aran_d&lt;-hillpair(data=Aran_counts_D, q=0) beta_div_neutral_aran_d&lt;-hillpair(data=Aran_counts_D, q=1) beta_div_phylo_aran_d&lt;-hillpair(data=Aran_counts_D, q=1, tree=genome_tree) beta_div_func_aran_d&lt;-hillpair(data=Aran_counts_func_D, q=1, dist=dist) pairwise.adonis(beta_div_richness_aran_d$S, Aran_transect_D$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_aran_d$S, Aran_transect_D$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_aran_d$S, Aran_transect_D$Elevation, perm = 999) pairwise.adonis(beta_div_func_aran_d$S, Aran_transect_D$Elevation, perm = 999) Aran_transect_E&lt;-Aran_transect %&gt;% filter(Elevation==&quot;1650&quot; | Elevation==&quot;1850&quot;) Aran_counts_E &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(Aran_transect_E))] identical(sort(colnames(Aran_counts_E)), sort(as.character(rownames(Aran_transect_E)))) Aran_counts_func_E &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(Aran_transect_E))] beta_div_richness_aran_e&lt;-hillpair(data=Aran_counts_E, q=0) beta_div_neutral_aran_e&lt;-hillpair(data=Aran_counts_E, q=1) beta_div_phylo_aran_e&lt;-hillpair(data=Aran_counts_E, q=1, tree=genome_tree) beta_div_func_aran_e&lt;-hillpair(data=Aran_counts_func_E, q=1, dist=dist) pairwise.adonis(beta_div_richness_aran_e$S, Aran_transect_E$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_aran_e$S, Aran_transect_E$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_aran_e$S, Aran_transect_E$Elevation, perm = 999) pairwise.adonis(beta_div_func_aran_e$S, Aran_transect_E$Elevation, perm = 999) 9.3 Sentein sentein_transect_A&lt;-sentein_transect %&gt;% filter(Elevation==&quot;941&quot; | Elevation==&quot;1260&quot;) sentein_counts_A &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(sentein_transect_A))] identical(sort(colnames(sentein_counts_A)), sort(as.character(rownames(sentein_transect_A)))) sentein_counts_func_A &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(sentein_transect_A))] beta_div_richness_sentein_a&lt;-hillpair(data=sentein_counts_A, q=0) beta_div_neutral_sentein_a&lt;-hillpair(data=sentein_counts_A, q=1) beta_div_phylo_sentein_a&lt;-hillpair(data=sentein_counts_A, q=1, tree=genome_tree) beta_div_func_sentein_a&lt;-hillpair(data=sentein_counts_func_A, q=1, dist=dist) pairwise.adonis(beta_div_richness_sentein_a$S, sentein_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_sentein_a$S, sentein_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_sentein_a$S, sentein_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_func_sentein_a$S, sentein_transect_A$Elevation, perm = 999) sentein_transect_B&lt;-sentein_transect %&gt;% filter(Elevation==&quot;1260&quot; | Elevation==&quot;1628&quot;) sentein_counts_B &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(sentein_transect_B))] identical(sort(colnames(sentein_counts_B)), sort(as.character(rownames(sentein_transect_B)))) sentein_counts_func_B &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(sentein_transect_B))] beta_div_richness_sentein_b&lt;-hillpair(data=sentein_counts_B, q=0) beta_div_neutral_sentein_b&lt;-hillpair(data=sentein_counts_B, q=1) beta_div_phylo_sentein_b&lt;-hillpair(data=sentein_counts_B, q=1, tree=genome_tree) beta_div_func_sentein_b&lt;-hillpair(data=sentein_counts_func_B, q=1, dist=dist) pairwise.adonis(beta_div_richness_sentein_b$S, sentein_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_sentein_b$S, sentein_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_sentein_b$S, sentein_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_func_sentein_b$S, sentein_transect_B$Elevation, perm = 999) sentein_transect_C&lt;-sentein_transect %&gt;% filter(Elevation==&quot;1628&quot; | Elevation==&quot;1873&quot;) sentein_counts_C &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(sentein_transect_C))] identical(sort(colnames(sentein_counts_C)), sort(as.character(rownames(sentein_transect_C)))) sentein_counts_func_C &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(sentein_transect_C))] beta_div_richness_sentein_c&lt;-hillpair(data=sentein_counts_C, q=0) beta_div_neutral_sentein_c&lt;-hillpair(data=sentein_counts_C, q=1) beta_div_phylo_sentein_c&lt;-hillpair(data=sentein_counts_C, q=1, tree=genome_tree) beta_div_func_sentein_c&lt;-hillpair(data=sentein_counts_func_C, q=1, dist=dist) pairwise.adonis(beta_div_richness_sentein_c$S, sentein_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_sentein_c$S, sentein_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_sentein_c$S, sentein_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_func_sentein_c$S, sentein_transect_C$Elevation, perm = 999) 9.4 Tourmalet tourmalet_transect_A&lt;-tourmalet_transect %&gt;% filter(Elevation==&quot;953&quot; | Elevation==&quot;1255&quot;) tourmalet_counts_A &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(tourmalet_transect_A))] identical(sort(colnames(tourmalet_counts_A)), sort(as.character(rownames(tourmalet_transect_A)))) tourmalet_counts_func_A &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(tourmalet_transect_A))] beta_div_richness_tourmalet_a&lt;-hillpair(data=tourmalet_counts_A, q=0) beta_div_neutral_tourmalet_a&lt;-hillpair(data=tourmalet_counts_A, q=1) beta_div_phylo_tourmalet_a&lt;-hillpair(data=tourmalet_counts_A, q=1, tree=genome_tree) beta_div_func_tourmalet_a&lt;-hillpair(data=tourmalet_counts_func_A, q=1, dist=dist) pairwise.adonis(beta_div_richness_tourmalet_a$S, tourmalet_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_tourmalet_a$S, tourmalet_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_tourmalet_a$S, tourmalet_transect_A$Elevation, perm = 999) pairwise.adonis(beta_div_func_tourmalet_a$S, tourmalet_transect_A$Elevation, perm = 999) tourmalet_transect_B&lt;-tourmalet_transect %&gt;% filter(Elevation==&quot;1255&quot; | Elevation==&quot;1561&quot;) tourmalet_counts_B &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(tourmalet_transect_B))] identical(sort(colnames(tourmalet_counts_B)), sort(as.character(rownames(tourmalet_transect_B)))) tourmalet_counts_func_B &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(tourmalet_transect_B))] beta_div_richness_tourmalet_b&lt;-hillpair(data=tourmalet_counts_B, q=0) beta_div_neutral_tourmalet_b&lt;-hillpair(data=tourmalet_counts_B, q=1) beta_div_phylo_tourmalet_b&lt;-hillpair(data=tourmalet_counts_B, q=1, tree=genome_tree) beta_div_func_tourmalet_b&lt;-hillpair(data=tourmalet_counts_func_B, q=1, dist=dist) pairwise.adonis(beta_div_richness_tourmalet_b$S, tourmalet_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_tourmalet_b$S, tourmalet_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_tourmalet_b$S, tourmalet_transect_B$Elevation, perm = 999) pairwise.adonis(beta_div_func_tourmalet_b$S, tourmalet_transect_B$Elevation, perm = 999) tourmalet_transect_C&lt;-tourmalet_transect %&gt;% filter(Elevation==&quot;1561&quot; | Elevation==&quot;1797&quot;) tourmalet_counts_C &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(tourmalet_transect_C))] identical(sort(colnames(tourmalet_counts_C)), sort(as.character(rownames(tourmalet_transect_C)))) tourmalet_counts_func_C &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(tourmalet_transect_C))] beta_div_richness_tourmalet_c&lt;-hillpair(data=tourmalet_counts_C, q=0) beta_div_neutral_tourmalet_c&lt;-hillpair(data=tourmalet_counts_C, q=1) beta_div_phylo_tourmalet_c&lt;-hillpair(data=tourmalet_counts_C, q=1, tree=genome_tree) beta_div_func_tourmalet_c&lt;-hillpair(data=tourmalet_counts_func_C, q=1, dist=dist) pairwise.adonis(beta_div_richness_tourmalet_c$S, tourmalet_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_tourmalet_c$S, tourmalet_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_tourmalet_c$S, tourmalet_transect_C$Elevation, perm = 999) pairwise.adonis(beta_div_func_tourmalet_c$S, tourmalet_transect_C$Elevation, perm = 999) tourmalet_transect_D&lt;-tourmalet_transect %&gt;% filter(Elevation==&quot;1797&quot; | Elevation==&quot;2065&quot;| Elevation==&quot;2134&quot;) tourmalet_counts_D &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(tourmalet_transect_D))] identical(sort(colnames(tourmalet_counts_D)), sort(as.character(rownames(tourmalet_transect_D)))) tourmalet_counts_func_D &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(tourmalet_transect_D))] beta_div_richness_tourmalet_d&lt;-hillpair(data=tourmalet_counts_D, q=0) beta_div_neutral_tourmalet_d&lt;-hillpair(data=tourmalet_counts_D, q=1) beta_div_phylo_tourmalet_d&lt;-hillpair(data=tourmalet_counts_D, q=1, tree=genome_tree) beta_div_func_tourmalet_d&lt;-hillpair(data=tourmalet_counts_func_D, q=1, dist=dist) pairwise.adonis(beta_div_richness_tourmalet_d$S, tourmalet_transect_D$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_tourmalet_d$S, tourmalet_transect_D$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_tourmalet_d$S, tourmalet_transect_D$Elevation, perm = 999) pairwise.adonis(beta_div_func_tourmalet_d$S, tourmalet_transect_D$Elevation, perm = 999) tourmalet_transect_E&lt;-tourmalet_transect %&gt;% filter(Elevation==&quot;2065&quot;| Elevation==&quot;2134&quot;| Elevation==&quot;2306&quot;) tourmalet_counts_E &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(tourmalet_transect_E))] identical(sort(colnames(tourmalet_counts_E)), sort(as.character(rownames(tourmalet_transect_E)))) tourmalet_counts_func_E &lt;- temp_genome_counts_func[, which(colnames(temp_genome_counts_func) %in% rownames(tourmalet_transect_E))] beta_div_richness_tourmalet_e&lt;-hillpair(data=tourmalet_counts_E, q=0) beta_div_neutral_tourmalet_e&lt;-hillpair(data=tourmalet_counts_E, q=1) beta_div_phylo_tourmalet_e&lt;-hillpair(data=tourmalet_counts_E, q=1, tree=genome_tree) beta_div_func_tourmalet_e&lt;-hillpair(data=tourmalet_counts_func_E, q=1, dist=dist) pairwise.adonis(beta_div_richness_tourmalet_e$S, tourmalet_transect_E$Elevation, perm = 999) pairwise.adonis(beta_div_neutral_tourmalet_e$S, tourmalet_transect_E$Elevation, perm = 999) pairwise.adonis(beta_div_phylo_tourmalet_e$S, tourmalet_transect_E$Elevation, perm = 999) pairwise.adonis(beta_div_func_tourmalet_e$S, tourmalet_transect_E$Elevation, perm = 999) "],["beta-diversity-comparison-at-elevation-level.html", "Chapter 10 Beta diversity comparison at elevation level 10.1 Aisa 10.2 Aran 10.3 Sentein 10.4 Tourmalet", " Chapter 10 Beta diversity comparison at elevation level 10.1 Aisa Aisa_transect&lt;-tibble::rownames_to_column(Aisa_transect, var = &quot;sample&quot;) Aisa_counts&lt;-tibble::rownames_to_column(Aisa_counts, var = &quot;genome&quot;) richness_beta_aisa &lt;- Aisa_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(Aisa_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 0) ) richness_beta_aisa &lt;- Aisa_counts %&gt;% pivot_longer(!genome, names_to = &quot;sample&quot;, values_to = &quot;counts&quot;) %&gt;% left_join(Aisa_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation = factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data = ., metric = &quot;S&quot;, q = 0)) %&gt;% do.call(cbind, .) names(richness_beta_aisa) &lt;- unique(Aisa_transect$Elevation) %&gt;% sort() neutral_beta_aisa &lt;- Aisa_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(Aisa_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1) ) names(neutral_beta_aisa) &lt;- unique(Aisa_transect$Elevation) %&gt;% sort() phylo_beta_aisa &lt;- Aisa_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(Aisa_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1, tree=genome_tree) ) names(phylo_beta_aisa) &lt;- unique(Aisa_transect$Elevation) %&gt;% sort() Aisa_counts_func&lt;-tibble::rownames_to_column(Aisa_counts_func, var = &quot;genome&quot;) func_beta_aisa &lt;- Aisa_counts_func %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(Aisa_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1, dist=dist) ) names(func_beta_aisa) &lt;- unique(Aisa_transect$Elevation) %&gt;% sort() # Merge all metrics beta_div_aisa &lt;- bind_rows(richness_beta_aisa,neutral_beta_aisa,phylo_beta_aisa,func_beta_aisa) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;Elevation&quot;) %&gt;% as_tibble() %&gt;% rename(&quot;richness&quot;=V1,&quot;neutral&quot;=V2,&quot;phylogenetic&quot;=V3,&quot;functional&quot;=V4) 10.2 Aran aran_transect&lt;-tibble::rownames_to_column(Aran_transect, var = &quot;sample&quot;) aran_counts&lt;-tibble::rownames_to_column(Aran_counts, var = &quot;genome&quot;) richness_beta_aran &lt;- aran_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(aran_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 0) ) names(richness_beta_aran) &lt;- unique(aran_transect$Elevation) %&gt;% sort() neutral_beta_aran &lt;- aran_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(aran_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1) ) names(neutral_beta_aran) &lt;- unique(aran_transect$Elevation) %&gt;% sort() phylo_beta_aran &lt;- aran_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(aran_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1, tree=genome_tree) ) names(phylo_beta_aran) &lt;- unique(aran_transect$Elevation) %&gt;% sort() aran_counts_func&lt;-tibble::rownames_to_column(Aran_counts_func, var = &quot;genome&quot;) func_beta_aran &lt;- aran_counts_func %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(aran_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1, dist=dist) ) names(func_beta_aran) &lt;- unique(aran_transect$Elevation) %&gt;% sort() # Merge all metrics beta_div_aran &lt;- bind_rows(richness_beta_aran,neutral_beta_aran,phylo_beta_aran,func_beta_aran) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;Elevation&quot;) %&gt;% as_tibble() %&gt;% rename(&quot;richness&quot;=V1,&quot;neutral&quot;=V2,&quot;phylogenetic&quot;=V3,&quot;functional&quot;=V4) 10.3 Sentein sentein_transect&lt;-tibble::rownames_to_column(sentein_transect, var = &quot;sample&quot;) sentein_counts&lt;-tibble::rownames_to_column(sentein_counts, var = &quot;genome&quot;) richness_beta_sentein &lt;- sentein_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(sentein_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 0) ) names(richness_beta_sentein) &lt;- unique(sentein_transect$Elevation) %&gt;% sort() neutral_beta_sentein &lt;- sentein_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(sentein_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1) ) names(neutral_beta_sentein) &lt;- unique(sentein_transect$Elevation) %&gt;% sort() phylo_beta_sentein &lt;- sentein_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(sentein_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1, tree=genome_tree) ) names(phylo_beta_sentein) &lt;- unique(sentein_transect$Elevation) %&gt;% sort() sentein_counts_func&lt;-tibble::rownames_to_column(sentein_counts_func, var = &quot;genome&quot;) func_beta_sentein &lt;- sentein_counts_func %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(sentein_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1, dist=dist) ) names(func_beta_sentein) &lt;- unique(sentein_transect$Elevation) %&gt;% sort() # Merge all metrics beta_div_sentein &lt;- bind_rows(richness_beta_sentein,neutral_beta_sentein,phylo_beta_sentein,func_beta_sentein) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;Elevation&quot;) %&gt;% as_tibble() %&gt;% rename(&quot;richness&quot;=V1,&quot;neutral&quot;=V2,&quot;phylogenetic&quot;=V3,&quot;functional&quot;=V4) 10.4 Tourmalet tourmalet_transect&lt;-tibble::rownames_to_column(tourmalet_transect, var = &quot;sample&quot;) tourmalet_counts&lt;-tibble::rownames_to_column(tourmalet_counts, var = &quot;genome&quot;) richness_beta_tourmalet &lt;- tourmalet_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(tourmalet_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 0) ) names(richness_beta_tourmalet) &lt;- unique(tourmalet_transect$Elevation) %&gt;% sort() neutral_beta_tourmalet &lt;- tourmalet_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(tourmalet_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1) ) names(neutral_beta_tourmalet) &lt;- unique(tourmalet_transect$Elevation) %&gt;% sort() phylo_beta_tourmalet &lt;- tourmalet_counts %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(tourmalet_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1, tree=genome_tree) ) names(phylo_beta_tourmalet) &lt;- unique(tourmalet_transect$Elevation) %&gt;% sort() tourmalet_counts_func&lt;-tibble::rownames_to_column(tourmalet_counts_func, var = &quot;genome&quot;) func_beta_tourmalet &lt;- tourmalet_counts_func %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to = &quot;counts&quot;) %&gt;% left_join(tourmalet_transect, by = join_by(sample == sample)) %&gt;% mutate(Elevation=factor(Elevation)) %&gt;% group_by(Elevation) %&gt;% group_split() %&gt;% map_dbl(., ~ .x %&gt;% select(genome, sample, counts) %&gt;% pivot_wider(names_from = sample, values_from = counts) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% tss() %&gt;% as.data.frame() %&gt;% hilldiss(data=., metric=&quot;S&quot;, q = 1, dist=dist) ) names(func_beta_tourmalet) &lt;- unique(tourmalet_transect$Elevation) %&gt;% sort() # Merge all metrics beta_div_tourmalet &lt;- bind_rows(richness_beta_tourmalet,neutral_beta_tourmalet,phylo_beta_tourmalet,func_beta_tourmalet) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;Elevation&quot;) %&gt;% as_tibble() %&gt;% rename(&quot;richness&quot;=V1,&quot;neutral&quot;=V2,&quot;phylogenetic&quot;=V3,&quot;functional&quot;=V4) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
